<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright Â© 2015-2016 Cask Data, Inc.

  Licensed under the Apache License, Version 2.0 (the "License"); you may not
  use this file except in compliance with the License. You may obtain a copy of
  the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  License for the specific language governing permissions and limitations under
  the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>co.cask.cdap.test</groupId>
  <artifactId>integration-test</artifactId>
  <name>integration-test</name>
  <version>1.0.0</version>
  <modules>
    <module>integration-test-remote</module>
    <module>integration-test-standalone</module>
    <module>upgrade-test</module>
    <module>long-running-test</module>
    <module>integration-test-core</module>
  </modules>
  <packaging>pom</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <cdap.pre.version>3.5.1</cdap.pre.version>
    <cdap.version>4.1.0-SNAPSHOT</cdap.version>
    <hydrator.version>1.6.0-SNAPSHOT</hydrator.version>
    <tracker.version>0.4.0-SNAPSHOT</tracker.version>
    <!-- cdap.examples.version is overridden in the pre-stage of upgrade tests -->
    <cdap.examples.version>${cdap.version}</cdap.examples.version>
    <junit.version>4.11</junit.version>
    <hadoop.version>2.3.0</hadoop.version>
    <kafka.version>0.8.2.2</kafka.version>
    <snappy.version>1.1.1.7</snappy.version>

    <!-- Skip all test cases by default. The different test cases are enabled in the profiles defined below -->
    <skip.remote.test>true</skip.remote.test>
    <skip.standalone.test>true</skip.standalone.test>
    <skip.upgrade.test>true</skip.upgrade.test>
    <skip.long.running.test>true</skip.long.running.test>
  </properties>

  <dependencies>
    <!-- Use provided scope for example jars that pulled in for testing -->
    <dependency>
      <groupId>co.cask.cdap</groupId>
      <artifactId>HelloWorld</artifactId>
      <version>${cdap.examples.version}</version>
    </dependency>
    <dependency>
      <groupId>co.cask.cdap</groupId>
      <artifactId>FileSetExample</artifactId>
      <version>${cdap.examples.version}</version>
    </dependency>
    <dependency>
      <groupId>co.cask.cdap</groupId>
      <artifactId>Purchase</artifactId>
      <version>${cdap.examples.version}</version>
    </dependency>
    <dependency>
      <groupId>co.cask.cdap</groupId>
      <artifactId>SparkPageRank</artifactId>
      <version>${cdap.examples.version}</version>
    </dependency>
    <dependency>
      <groupId>co.cask.cdap</groupId>
      <artifactId>WordCount</artifactId>
      <version>${cdap.examples.version}</version>
    </dependency>
    <dependency>
      <groupId>co.cask.cdap</groupId>
      <artifactId>WikipediaPipeline</artifactId>
      <version>${cdap.examples.version}</version>
    </dependency>
    <dependency>
      <groupId>co.cask.cdap</groupId>
      <artifactId>DataCleansing</artifactId>
      <version>${cdap.examples.version}</version>
    </dependency>
    <dependency> <!-- PurchaseHistory Dependency -->
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-core</artifactId>
      <version>${hadoop.version}</version>
      <exclusions>
        <exclusion>
          <groupId>asm</groupId>
          <artifactId>asm</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>co.cask.cdap</groupId>
      <artifactId>cdap-api</artifactId>
      <version>${cdap.version}</version>
    </dependency>
    <dependency> <!-- ETLBatchConfig -->
      <groupId>co.cask.cdap</groupId>
      <artifactId>cdap-data-pipeline</artifactId>
      <version>${cdap.version}</version>
    </dependency>
    <dependency> <!-- ETLRealtimeConfig -->
      <groupId>co.cask.cdap</groupId>
      <artifactId>cdap-etl-realtime</artifactId>
      <version>${cdap.version}</version>
    </dependency>
    <dependency>
      <groupId>co.cask.hydrator</groupId>
      <artifactId>core-plugins</artifactId>
      <version>${hydrator.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>co.cask.tracker</groupId>
      <artifactId>tracker</artifactId>
      <version>${tracker.version}</version>
      <exclusions>
        <exclusion>
         <groupId>*</groupId>
         <artifactId>*</artifactId>
        </exclusion>
        </exclusions>
    </dependency>
    <dependency>
      <!-- co.cask.hydrator.common.Constants -->
      <groupId>co.cask.hydrator</groupId>
      <artifactId>hydrator-common</artifactId>
      <version>${hydrator.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>co.cask.cdap</groupId>
      <artifactId>cdap-common</artifactId>
      <version>${cdap.version}</version>
    </dependency>
    <!-- to test Hydrator Kafka plugins -->
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka_2.10</artifactId>
      <version>${kafka.version}</version>
    </dependency>
    <dependency>
      <groupId>org.xerial.snappy</groupId>
      <artifactId>snappy-java</artifactId>
      <version>${snappy.version}</version>
    </dependency>
    <dependency>
      <groupId>co.cask.cdap</groupId>
      <artifactId>cdap-integration-test</artifactId>
      <version>${cdap.version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>sonatype</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
    </repository>
  </repositories>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.18.1</version>
        <configuration>
          <argLine>-Xmx5000m -Djava.awt.headless=true -XX:MaxPermSize=256m -XX:+UseConcMarkSweepGC -XX:OnOutOfMemoryError="kill -9 %p"</argLine>
          <systemPropertyVariables>
            <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
            <stage>${upgrade.test.stage}</stage>
            <longrunning.as.upgrade>${longrunning.as.upgrade}</longrunning.as.upgrade>
            <input.state>${input.state}</input.state>
            <output.state>${output.state}</output.state>
          </systemPropertyVariables>
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
          <includes>
            <include>**/*Test.java</include>
            <include>**/*TestSuite.java</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.12.1</version>
        <executions>
          <execution>
            <id>validate</id>
            <phase>process-test-classes</phase>
            <configuration>
              <configLocation>checkstyle.xml</configLocation>
              <suppressionsLocation>suppressions.xml</suppressionsLocation>
              <encoding>UTF-8</encoding>
              <consoleOutput>true</consoleOutput>
              <failsOnError>true</failsOnError>
              <includeTestSourceDirectory>true</includeTestSourceDirectory>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
        <version>0.10</version>
        <executions>
          <execution>
            <id>rat-check</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>LICENSE*.txt</exclude>
                <exclude>**/Apache-LICENSE-2.0</exclude>
                <exclude>**/*.state</exclude>
                <exclude>**/*.json</exclude>
                <exclude>**/*.csv</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>remote-test</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <skip.remote.test>false</skip.remote.test>
      </properties>
    </profile>

    <profile>
      <id>standalone-test</id>
      <properties>
        <skip.standalone.test>false</skip.standalone.test>
      </properties>
    </profile>

    <profile>
      <id>upgrade-test-pre</id>
      <properties>
        <cdap.examples.version>${cdap.pre.version}</cdap.examples.version>
        <upgrade>true</upgrade>
        <upgrade.test.stage>PRE</upgrade.test.stage>

        <skip.upgrade.test>false</skip.upgrade.test>
        <skip.long.running.test>false</skip.long.running.test>
        <longrunning.as.upgrade>true</longrunning.as.upgrade>
        <input.state>./upgrade-test.state</input.state>
        <output.state>./upgrade-test.state</output.state>
      </properties>
    </profile>

    <profile>
      <id>upgrade-test-post</id>
      <properties>
        <upgrade>true</upgrade>
        <upgrade.test.stage>POST</upgrade.test.stage>

        <skip.upgrade.test>false</skip.upgrade.test>
        <skip.long.running.test>false</skip.long.running.test>
        <longrunning.as.upgrade>true</longrunning.as.upgrade>
        <input.state>./upgrade-test.state</input.state>
        <output.state>./upgrade-test.state</output.state>
      </properties>
    </profile>

    <profile>
      <id>long-running-test</id>
      <properties>
        <skip.long.running.test>false</skip.long.running.test>
      </properties>
    </profile>
  </profiles>

</project>
